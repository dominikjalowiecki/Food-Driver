/**
 * Food Driver API
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CreateChatMessageRequest } from '../model/models';
import { CreateImage201Response } from '../model/models';
import { CreateOrderRequest } from '../model/models';
import { GetOrder200Response } from '../model/models';
import { ListChatMessages200Response } from '../model/models';
import { ListMeOrders200Response } from '../model/models';
import { OrderStatus } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface OrdersServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * Przyjęcie zamówienia do realizacji
     * @param id Unikalny identyfikator zamówienia
     */
    acceptOrderForRealization(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * Anulowanie zamówienia
     * @param id Unikalny identyfikator zamówienia
     */
    cancelOrder(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * Utworzenie wiadomości czatu zamówienia
     * @param id Unikalny identyfikator zamówienia
     * @param createChatMessageRequest 
     */
    createChatMessage(id: number, createChatMessageRequest?: CreateChatMessageRequest, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * Utworzenie zamówienia
     * @param createOrderRequest 
     */
    createOrder(createOrderRequest?: CreateOrderRequest, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * Utworzenie zgłoszenia problemu z zamówieniem
     * @param id Unikalny identyfikator zamówienia
     * @param createChatMessageRequest 
     */
    createOrderReport(id: number, createChatMessageRequest?: CreateChatMessageRequest, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * Przegląd szczegółów zamówienia
     * @param id Unikalny identyfikator zamówienia
     */
    getOrder(id: number, extraHttpRequestParams?: any): Observable<GetOrder200Response>;

    /**
     * 
     * Przegląd wiadomości czatu zamówienia
     * @param id Unikalny identyfikator zamówienia
     * @param page Numer strony
     */
    listChatMessages(id: number, page?: number, extraHttpRequestParams?: any): Observable<ListChatMessages200Response>;

    /**
     * 
     * Przegląd zamówień systemu
     * @param status Status zamówienia
     * @param reported Zgłoszono problem z zamówieniem
     * @param page Numer strony
     */
    listOrders(status?: OrderStatus, reported?: boolean, page?: number, extraHttpRequestParams?: any): Observable<ListMeOrders200Response>;

    /**
     * 
     * Dostarczenie zamówienia
     * @param id Unikalny identyfikator zamówienia
     * @param createImage201Response 
     */
    orderDelivered(id: number, createImage201Response?: CreateImage201Response, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * Odebranie zamówienia do dostarczenia
     * @param id Unikalny identyfikator zamówienia
     */
    orderPickedUpForDelivery(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * Przygotowanie zamówienia do dostawy
     * @param id Unikalny identyfikator zamówienia
     */
    orderReadyForDelivery(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * Potwierdzenie realizacji zamówienia
     * @param id Unikalny identyfikator zamówienia
     */
    orderRealized(id: number, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * Rezygnacja z dostarczenia zamówienia
     * @param id Unikalny identyfikator zamówienia
     */
    resignToDeliverOrder(id: number, extraHttpRequestParams?: any): Observable<{}>;

}
